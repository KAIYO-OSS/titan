{"values": [{"isRequired": "false", "name": "global.imageRegistry", "value": "nil", "description": "Global Docker image registry"}, {"isRequired": "false", "name": "global.storageClass", "value": "nil", "description": "Global storage class for dynamic provisioning"}, {"isRequired": "false", "name": "global.redis.password", "value": "nil", "description": "Redis password (overrides password)"}, {"isRequired": "false", "name": "image.pullSecrets", "value": "nil", "description": "Specify docker-registry secret names as an array"}, {"isRequired": "false", "name": "nameOverride", "value": "nil", "description": "String to partially override redis.fullname template with a string (will prepend the release name)"}, {"isRequired": "false", "name": "fullnameOverride", "value": "nil", "description": "String to fully override redis.fullname template with a string"}, {"isRequired": "false", "name": "existingSecret", "value": "nil", "description": "Name of existing secret object (for password authentication)"}, {"isRequired": "false", "name": "existingSecretPasswordKey", "value": "nil", "description": "Name of key containing password to be retrieved from the existing secret"}, {"isRequired": "false", "name": "securityContext.sysctls", "value": "nil", "description": "Set namespaced sysctls for the container (both redis master and slave pods)"}, {"isRequired": "false", "name": "metrics.image.pullSecrets", "value": "nil", "description": "Specify docker-registry secret names as an array"}, {"isRequired": "false", "name": "metrics.serviceMonitor.namespace", "value": "nil", "description": "Optional namespace which Prometheus is running in"}, {"isRequired": "false", "name": "metrics.serviceMonitor.interval", "value": "nil", "description": "How frequently to scrape metrics (use by default, falling back to Prometheus' default)"}, {"isRequired": "false", "name": "metrics.service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP if redis metrics service type is LoadBalancer"}, {"isRequired": "false", "name": "persistence.existingClaim", "value": "nil", "description": "Provide an existing PersistentVolumeClaim"}, {"isRequired": "false", "name": "master.statefulset.rollingUpdatePartition", "value": "nil", "description": "Partition update strategy"}, {"isRequired": "false", "name": "podDisruptionBudget.maxUnavailable", "value": "nil", "description": "Maximum unavailable pods"}, {"isRequired": "false", "name": "tls.certificatesSecret", "value": "nil", "description": "Name of the secret that contains the certificates"}, {"isRequired": "false", "name": "tls.certFilename", "value": "nil", "description": "Certificate filename"}, {"isRequired": "false", "name": "tls.certKeyFilename", "value": "nil", "description": "Certificate key filename"}, {"isRequired": "false", "name": "tls.certCAFilename", "value": "nil", "description": "CA Certificate filename"}, {"isRequired": "false", "name": "tls.dhParamsFilename", "value": "nil", "description": "DH params (in order to support DH based ciphers)"}, {"isRequired": "false", "name": "master.configmap", "value": "nil", "description": "Additional Redis configuration for the master nodes (this value is evaluated as a template)"}, {"isRequired": "false", "name": "master.schedulerName", "value": "nil", "description": "Name of an alternate scheduler"}, {"isRequired": "false", "name": "master.service.nodePort", "value": "nil", "description": "Kubernetes Service nodePort (redis master)"}, {"isRequired": "false", "name": "master.service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP if redis master service type is LoadBalancer"}, {"isRequired": "false", "name": "master.service.loadBalancerSourceRanges", "value": "nil", "description": "loadBalancerSourceRanges if redis master service type is LoadBalancer"}, {"isRequired": "false", "name": "slave.service.nodePort", "value": "nil", "description": "Kubernetes Service nodePort (redis slave)"}, {"isRequired": "false", "name": "slave.service.loadBalancerIP", "value": "nil", "description": "LoadBalancerIP if Redis slave service type is LoadBalancer"}, {"isRequired": "false", "name": "slave.service.loadBalancerSourceRanges", "value": "nil", "description": "loadBalancerSourceRanges if Redis slave service type is LoadBalancer"}, {"isRequired": "false", "name": "slave.configmap", "value": "nil", "description": "Additional Redis configuration for the slave nodes (this value is evaluated as a template)"}, {"isRequired": "false", "name": "slave.statefulset.rollingUpdatePartition", "value": "nil", "description": "Partition update strategy"}, {"isRequired": "false", "name": "slave.schedulerName", "value": "nil", "description": "Name of an alternate scheduler"}, {"isRequired": "false", "name": "sentinel.configmap", "value": "nil", "description": "Additional Redis configuration for the sentinel nodes (this value is evaluated as a template)"}, {"isRequired": "false", "name": "sentinel.service.nodePort", "value": "nil", "description": "Kubernetes Service nodePort (redis sentinel)"}, {"isRequired": "false", "name": "sentinel.service.loadBalancerIP", "value": "nil", "description": "LoadBalancerIP if Redis sentinel service type is LoadBalancer"}, {"isRequired": "false", "name": "sentinel.image.pullSecrets", "value": "nil", "description": "Specify docker-registry secret names as an array"}]}