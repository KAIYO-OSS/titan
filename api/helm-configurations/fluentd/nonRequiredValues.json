{"values": [{"isRequired": "false", "name": "global.imageRegistry", "value": "nil", "description": "Global Docker image registry"}, {"isRequired": "false", "name": "nameOverride", "value": "nil", "description": "String to partially override fluentd.fullname template with a string (will prepend the release name)"}, {"isRequired": "false", "name": "fullnameOverride", "value": "nil", "description": "String to fully override fluentd.fullname template with a string"}, {"isRequired": "false", "name": "forwarder.configMap", "value": "nil", "description": "Name of the config map that contains the Fluentd configuration files"}, {"isRequired": "false", "name": "forwarder.extraArgs", "value": "nil", "description": "Extra arguments for the Fluentd command line"}, {"isRequired": "false", "name": "forwarder.service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP if service type is LoadBalancer"}, {"isRequired": "false", "name": "forwarder.service.clusterIP", "value": "nil", "description": "Static clusterIP or None for headless services"}, {"isRequired": "false", "name": "forwarder.resources", "value": "nil", "description": "Configure resource requests and limits"}, {"isRequired": "false", "name": "forwarder.extraVolumes", "value": "nil", "description": "Extra volumes"}, {"isRequired": "false", "name": "forwarder.extraVolumeMounts", "value": "nil", "description": "Mount extra volume(s),"}, {"isRequired": "false", "name": "aggregator.configMap", "value": "nil", "description": "Name of the config map that contains the Fluentd configuration files"}, {"isRequired": "false", "name": "aggregator.extraArgs", "value": "nil", "description": "Extra arguments for the Fluentd command line"}, {"isRequired": "false", "name": "aggregator.service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP if service type is LoadBalancer"}, {"isRequired": "false", "name": "aggregator.service.clusterIP", "value": "nil", "description": "Static clusterIP or None for headless services"}, {"isRequired": "false", "name": "aggregator.persistence.storageClass", "value": "nil", "description": "Persistent Volume storage class"}, {"isRequired": "false", "name": "aggregator.resources", "value": "nil", "description": "Configure resource requests and limits"}, {"isRequired": "false", "name": "metrics.enabled", "value": "nil", "description": "Enable the export of Prometheus metrics"}, {"isRequired": "false", "name": "metrics.service.loadBalancerIP", "value": "nil", "description": "Load Balancer IP if the Prometheus metrics server type is LoadBalancer"}, {"isRequired": "false", "name": "metrics.serviceMonitor.namespace", "value": "nil", "description": "Namespace in which Prometheus is running"}, {"isRequired": "false", "name": "metrics.serviceMonitor.interval", "value": "nil", "description": "Interval at which metrics should be scraped. (Prometheus Operator default value)"}, {"isRequired": "false", "name": "metrics.serviceMonitor.scrapeTimeout", "value": "nil", "description": "Timeout after which the scrape is ended (Prometheus Operator default value)"}, {"isRequired": "false", "name": "metrics.serviceMonitor.selector", "value": "nil", "description": "Prometheus instance selector labels"}, {"isRequired": "false", "name": "tls.existingSecret", "value": "nil", "description": "Existing secret with certificate content"}]}