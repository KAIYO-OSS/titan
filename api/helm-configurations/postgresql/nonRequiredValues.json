{"values": [{"isRequired": "false", "name": "global.imageRegistry", "value": "nil", "description": "Global Docker Image registry"}, {"isRequired": "false", "name": "global.postgresql.postgresqlDatabase", "value": "nil", "description": "PostgreSQL database (overrides postgresqlDatabase)"}, {"isRequired": "false", "name": "global.postgresql.postgresqlUsername", "value": "nil", "description": "PostgreSQL username (overrides postgresqlUsername)"}, {"isRequired": "false", "name": "global.postgresql.existingSecret", "value": "nil", "description": "Name of existing secret to use for PostgreSQL passwords (overrides existingSecret)"}, {"isRequired": "false", "name": "global.postgresql.postgresqlPassword", "value": "nil", "description": "PostgreSQL admin password (overrides postgresqlPassword)"}, {"isRequired": "false", "name": "global.postgresql.servicePort", "value": "nil", "description": "PostgreSQL port (overrides service.port)"}, {"isRequired": "false", "name": "global.postgresql.replicationPassword", "value": "nil", "description": "Replication user password (overrides replication.password)"}, {"isRequired": "false", "name": "global.storageClass", "value": "nil", "description": "Global storage class for dynamic provisioning"}, {"isRequired": "false", "name": "image.pullSecrets", "value": "nil", "description": "Specify Image pull secrets (does not add image pull secrets to deployed pods)"}, {"isRequired": "false", "name": "nameOverride", "value": "nil", "description": "String to partially override postgresql.fullname template with a string (will prepend the release name)"}, {"isRequired": "false", "name": "fullnameOverride", "value": "nil", "description": "String to fully override postgresql.fullname template with a string"}, {"isRequired": "false", "name": "ldap.existingSecret", "value": "nil", "description": "Name of existing secret to use for LDAP passwords"}, {"isRequired": "false", "name": "ldap.url", "value": "nil", "description": "LDAP URL beginning in the form ldap[s]://host[:port]/basedn[?[attribute][?[scope][?[filter]]]]"}, {"isRequired": "false", "name": "ldap.server", "value": "nil", "description": "IP address or name of the LDAP server."}, {"isRequired": "false", "name": "ldap.port", "value": "nil", "description": "Port number on the LDAP server to connect to"}, {"isRequired": "false", "name": "ldap.scheme", "value": "nil", "description": "Set to ldaps to use LDAPS."}, {"isRequired": "false", "name": "ldap.tls", "value": "nil", "description": "Set to 1 to use TLS encryption"}, {"isRequired": "false", "name": "ldap.prefix", "value": "nil", "description": "String to prepend to the user name when forming the DN to bind"}, {"isRequired": "false", "name": "ldap.suffix", "value": "nil", "description": "String to append to the user name when forming the DN to bind"}, {"isRequired": "false", "name": "ldap.search_attr", "value": "nil", "description": "Attribute to match agains the user name in the search"}, {"isRequired": "false", "name": "ldap.search_filter", "value": "nil", "description": "The search filter to use when doing search+bind authentication"}, {"isRequired": "false", "name": "ldap.baseDN", "value": "nil", "description": "Root DN to begin the search for the user in"}, {"isRequired": "false", "name": "ldap.bindDN", "value": "nil", "description": "DN of user to bind to LDAP"}, {"isRequired": "false", "name": "ldap.bind_password", "value": "nil", "description": "Password for the user to bind to LDAP"}, {"isRequired": "false", "name": "existingSecret", "value": "nil", "description": "Name of existing secret to use for PostgreSQL passwords. The secret has to contain the keys postgresql-postgres-password which is the password for postgresqlUsername when it is different of postgres, postgresql-password which will override postgresqlPassword, postgresql-replication-password which will override replication.password and postgresql-ldap-password which will be sed to authenticate on LDAP. The value is evaluated as a template."}, {"isRequired": "false", "name": "postgresqlDatabase", "value": "nil", "description": "PostgreSQL database"}, {"isRequired": "false", "name": "extraEnvVarsCM", "value": "nil", "description": "Name of a Config Map containing extra environment variables you would like to pass on to the pod. The value is evaluated as a template."}, {"isRequired": "false", "name": "postgresqlInitdbArgs", "value": "nil", "description": "PostgreSQL initdb extra arguments"}, {"isRequired": "false", "name": "postgresqlInitdbWalDir", "value": "nil", "description": "PostgreSQL location for transaction log"}, {"isRequired": "false", "name": "postgresqlConfiguration", "value": "nil", "description": "Runtime Config Parameters"}, {"isRequired": "false", "name": "postgresqlExtendedConf", "value": "nil", "description": "Extended Runtime Config Parameters (appended to main or default configuration)"}, {"isRequired": "false", "name": "pgHbaConfiguration", "value": "nil", "description": "Content of pg_hba.conf (do not create pg_hba.conf)"}, {"isRequired": "false", "name": "configurationConfigMap", "value": "nil", "description": "ConfigMap with the PostgreSQL configuration files (Note: Overrides postgresqlConfiguration and pgHbaConfiguration). The value is evaluated as a template."}, {"isRequired": "false", "name": "extendedConfConfigMap", "value": "nil", "description": "ConfigMap with the extended PostgreSQL configuration files. The value is evaluated as a template."}, {"isRequired": "false", "name": "initdbScripts", "value": "nil", "description": "Dictionary of initdb scripts"}, {"isRequired": "false", "name": "initdbUser", "value": "nil", "description": "PostgreSQL user to execute the .sql and sql.gz scripts"}, {"isRequired": "false", "name": "initdbPassword", "value": "nil", "description": "Password for the user specified in initdbUser"}, {"isRequired": "false", "name": "initdbScriptsConfigMap", "value": "nil", "description": "ConfigMap with the initdb scripts (Note: Overrides initdbScripts). The value is evaluated as a template."}, {"isRequired": "false", "name": "initdbScriptsSecret", "value": "nil", "description": "Secret with initdb scripts that contain sensitive information (Note: can be used with initdbScriptsConfigMap or initdbScripts). The value is evaluated as a template."}, {"isRequired": "false", "name": "service.nodePort", "value": "nil", "description": "Kubernetes Service nodePort"}, {"isRequired": "false", "name": "service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP if service type is LoadBalancer"}, {"isRequired": "false", "name": "schedulerName", "value": "nil", "description": "Name of the k8s scheduler (other than default)"}, {"isRequired": "false", "name": "persistence.existingClaim", "value": "nil", "description": "Provide an existing PersistentVolumeClaim, the value is evaluated as a template."}, {"isRequired": "false", "name": "persistence.storageClass", "value": "nil", "description": "PVC Storage Class for PostgreSQL volume"}, {"isRequired": "false", "name": "master.priorityClassName", "value": "nil", "description": "Priority Class to use for each pod (postgresql master)"}, {"isRequired": "false", "name": "master.service.type", "value": "nil", "description": "Allows using a different service type for Master"}, {"isRequired": "false", "name": "master.service.nodePort", "value": "nil", "description": "Allows using a different nodePort for Master"}, {"isRequired": "false", "name": "master.service.clusterIP", "value": "nil", "description": "Allows using a different clusterIP for Master"}, {"isRequired": "false", "name": "slave.priorityClassName", "value": "nil", "description": "Priority Class to use for each pod (postgresql slave)"}, {"isRequired": "false", "name": "slave.service.type", "value": "nil", "description": "Allows using a different service type for Slave"}, {"isRequired": "false", "name": "slave.service.nodePort", "value": "nil", "description": "Allows using a different nodePort for Slave"}, {"isRequired": "false", "name": "slave.service.clusterIP", "value": "nil", "description": "Allows using a different clusterIP for Slave"}, {"isRequired": "false", "name": "terminationGracePeriodSeconds", "value": "nil", "description": "Seconds the pod needs to terminate gracefully"}, {"isRequired": "false", "name": "serviceAccount.name", "value": "nil", "description": "Name of existing service account"}, {"isRequired": "false", "name": "tls.certificatesSecret", "value": "nil", "description": "Name of an existing secret that contains the certificates"}, {"isRequired": "false", "name": "tls.certCAFilename", "value": "nil", "description": "CA Certificate filename. If provided, PostgreSQL will authenticate TLS/SSL clients by requesting them a certificate."}, {"isRequired": "false", "name": "tls.crlFilename", "value": "nil", "description": "File containing a Certificate Revocation List"}, {"isRequired": "false", "name": "service.clusterIP", "value": "nil", "description": "Static clusterIP or None for headless services"}, {"isRequired": "false", "name": "metrics.service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP if redis metrics service type is LoadBalancer"}, {"isRequired": "false", "name": "metrics.serviceMonitor.namespace", "value": "nil", "description": "Optional namespace in which to create ServiceMonitor"}, {"isRequired": "false", "name": "metrics.serviceMonitor.interval", "value": "nil", "description": "Scrape interval. If not set, the Prometheus default scrape interval is used"}, {"isRequired": "false", "name": "metrics.serviceMonitor.scrapeTimeout", "value": "nil", "description": "Scrape timeout. If not set, the Prometheus default scrape timeout is used"}, {"isRequired": "false", "name": "metrics.image.pullSecrets", "value": "nil", "description": "Specify Image pull secrets (does not add image pull secrets to deployed pods)"}, {"isRequired": "false", "name": "metrics.customMetrics", "value": "nil", "description": "Additional custom metrics"}]}