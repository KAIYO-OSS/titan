{"values": [{"isRequired": "false", "name": "global.imageRegistry", "value": "nil", "description": "Global Docker image registry"}, {"isRequired": "false", "name": "global.storageClass", "value": "nil", "description": "Global storage class for dynamic provisioning"}, {"isRequired": "false", "name": "global.namespaceOverride", "value": "nil", "description": "Global string to override the release namespace"}, {"isRequired": "false", "name": "nameOverride", "value": "nil", "description": "String to partially override mongodb.fullname"}, {"isRequired": "false", "name": "fullnameOverride", "value": "nil", "description": "String to fully override mongodb.fullname"}, {"isRequired": "false", "name": "schedulerName", "value": "nil", "description": "Name of the scheduler (other than default) to dispatch pods"}, {"isRequired": "false", "name": "auth.username", "value": "nil", "description": "MongoDB custom user (mandatory if auth.database is set)"}, {"isRequired": "false", "name": "auth.database", "value": "nil", "description": "MongoDB custom database"}, {"isRequired": "false", "name": "auth.existingSecret", "value": "nil", "description": "Existing secret with MongoDB credentials"}, {"isRequired": "false", "name": "existingConfigmap", "value": "nil", "description": "Name of existing ConfigMap with MongoDB configuration"}, {"isRequired": "false", "name": "initdbScripts", "value": "nil", "description": "Dictionary of initdb scripts"}, {"isRequired": "false", "name": "initdbScriptsConfigMap", "value": "nil", "description": "ConfigMap with the initdb scripts"}, {"isRequired": "false", "name": "command", "value": "nil", "description": "Override default container command (useful when using custom images)"}, {"isRequired": "false", "name": "args", "value": "nil", "description": "Override default container args (useful when using custom images)"}, {"isRequired": "false", "name": "extraEnvVarsCM", "value": "nil", "description": "Name of existing ConfigMap containing extra env vars"}, {"isRequired": "false", "name": "extraEnvVarsSecret", "value": "nil", "description": "Name of existing Secret containing extra env vars (in case of sensitive data)"}, {"isRequired": "false", "name": "customLivenessProbe", "value": "nil", "description": "Override default liveness probe for MongoDB containers"}, {"isRequired": "false", "name": "customReadinessProbe", "value": "nil", "description": "Override default readiness probe for MongoDB containers"}, {"isRequired": "false", "name": "pdb.maxUnavailable", "value": "nil", "description": "Maximum number/percentage of MongoDB pods that may be made unavailable"}, {"isRequired": "false", "name": "service.clusterIP", "value": "nil", "description": "MongoDB service cluster IP"}, {"isRequired": "false", "name": "service.loadBalancerIP", "value": "nil", "description": "loadBalancerIP for MongoDB Service"}, {"isRequired": "false", "name": "externalAccess.service.domain", "value": "nil", "description": "Domain or external IP used to configure MongoDB advertised hostname when service type is NodePort"}, {"isRequired": "false", "name": "persistence.existingClaim", "value": "nil", "description": "Provide an existing PersistentVolumeClaim (only when architecture=standalone) (evaluated as a template)"}, {"isRequired": "false", "name": "persistence.storageClass", "value": "nil", "description": "PVC Storage Class for MongoDB data volume"}, {"isRequired": "false", "name": "arbiter.existingConfigmap", "value": "nil", "description": "Name of existing ConfigMap with Arbiter configuration"}, {"isRequired": "false", "name": "arbiter.command", "value": "nil", "description": "Override default container command (useful when using custom images)"}, {"isRequired": "false", "name": "arbiter.args", "value": "nil", "description": "Override default container args (useful when using custom images)"}, {"isRequired": "false", "name": "arbiter.extraEnvVarsCM", "value": "nil", "description": "Name of existing ConfigMap containing extra env vars"}, {"isRequired": "false", "name": "arbiter.extraEnvVarsSecret", "value": "nil", "description": "Name of existing Secret containing extra env vars (in case of sensitive data)"}, {"isRequired": "false", "name": "arbiter.customLivenessProbe", "value": "nil", "description": "Override default liveness probe for Arbiter containers"}, {"isRequired": "false", "name": "arbiter.customReadinessProbe", "value": "nil", "description": "Override default readiness probe for Arbiter containers"}, {"isRequired": "false", "name": "arbiter.pdb.maxUnavailable", "value": "nil", "description": "Maximum number/percentage of Arbiter pods that may be made unavailable"}, {"isRequired": "false", "name": "metrics.serviceMonitor.scrapeTimeout", "value": "nil", "description": "Specify the timeout after which the scrape is ended"}]}